<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.jeecgframework.boot</groupId>
		<artifactId>jeecg-boot-activiti-parent</artifactId>
		<version>2.4.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>jeecg-boot-activiti-module-system</artifactId>

	<properties>
		<!-- docker私服地址 -->
		<docker.repostory>119.29.103.133:81</docker.repostory>
		<!--项目名,需要和Harbor中的项目名称保持一致 -->
		<docker.registry.name>git-code</docker.registry.name>
	</properties>

	<repositories>
		<repository>
			<id>aliyun</id>
			<name>aliyun Repository</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jeecg</id>
			<name>jeecg Repository</name>
			<url>http://maven.jeecg.org/nexus/content/repositories/jeecg</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.jeecgframework.boot</groupId>
			<artifactId>jeecg-boot-activiti-system-local-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jeecgframework.boot</groupId>
			<artifactId>jeecg-boot-activiti-module-demo</artifactId>
			<version>${jeecgboot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jeecgframework.boot</groupId>
			<artifactId>jeecg-boot-activiti-module-activiti</artifactId>
			<version>${jeecgboot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jeecgframework.boot</groupId>
			<artifactId>jeecg-boot-activiti-module-extend</artifactId>
			<version>${jeecgboot.version}</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>jeecg-xxx</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--微服务模式下修改为 true,跳过此打包插件，否则微服务模块无法引用-->
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.2</version>
				<configuration>
					<serverId>dockerharbor</serverId>
					<registryUrl>http://${docker.repostory}</registryUrl>
					<!--必须配置dockerHost标签（除非配置系统环境变量DOCKER_HOST）-->
					<dockerHost>http://192.168.85.40:2375</dockerHost>
					<!--Building image 192.168.10.11/demo1-->
					<imageName>${docker.repostory}/${docker.registry.name}/${project.artifactId}:${project.version}</imageName>
					<!-- 指定 Dockerfile 路径-->
					<dockerDirectory>${basedir}/</dockerDirectory>
					<!-- jar包位置-->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<!--简化打包体积  启动命令
			java -Dloader.path=F:\Desktop\lib -jar jeecg-xxx.jar
			-->
			<!--<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layout>ZIP</layout>
					<includes>
						<include>
							<groupId>nothing</groupId>
							<artifactId>nothing</artifactId>
						</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->
		</plugins>
	</build>
</project>
